name: 'Experiment Runner with Gradle Profiler'
description: 'Executes a scenario defined with Gradle Profiler'

inputs:
  task:
    description: 'Gradle task to execute in the scenario'
    required: true
  warmups:
    description: 'Number of build warmups before measuring performance'
    required: false
    default: 1
  iterations:
    description: 'Number of iterations to run for performance measurement'
    required: false
    default: 5
  class:
    description: 'Class to apply the ABI change, if applicable'
    required: false
  variant:
    description: 'Branch or variant of the experiment'
    required: true
  variant-prefix:
    description: 'Prefix for the variant used in tagging'
    required: true
  experiment-id:
    description: 'Unique identifier for the experiment'
    required: true
  api-key:
    description: 'API key for accessing Develocity or related services'
    required: true
  repository:
    description: 'GitHub repository to check out'
    required: true
  jdk_version:
    description: 'Java version to use (default is 17)'
    required: true
    default: 17
  jdk_vendor:
    description: 'JDK vendor to use (default is zulu)'
    required: true
    default: 'zulu'
  extra-args:
    description: 'Extra arguments to pass to the Gradle command'
    required: true
  cache-url:
    description: 'URL for the cache node, if applicable'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.variant }}

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: ${{ inputs.jdk_vendor }}
        java-version: ${{ inputs.jdk_version }}

    - name: Setup Gradle Profiler
      uses: sdkman/sdkman-action@master
      id: sdkman
      with:
        candidate: gradleprofiler
        version: 0.22.0

    - name: Execute Gradle Build with Profiler
      id: geapix
      run: |
        unzip ${{ steps.sdkman.outputs.file }}
        EXTRA_ARG=""

        # Set EXTRA_ARG based on the provided input
        if [ -z "${{ inputs.extra-args }}" ] || [ -z "$(echo "${{ inputs.extra-args }}" | tr -d '[:space:]')" ]; then
          EXTRA_ARG="-Pfoo"
        else
          EXTRA_ARG="${{ inputs.extra-args }}"
        fi

        # Generate scenario file based on provided inputs
        if [ -z "${{ inputs.class }}" ]; then
          echo "assemble {
            title = \"assemble\"
            tasks = [\"${{ inputs.task }}\"]
            cleanup-tasks = [\"clean\"]
            gradle-args = [\"$EXTRA_ARG\", \"-Dscan.tag.${{ inputs.experiment-id }}_${{ inputs.variant-prefix }}${{ inputs.variant }}\", \"-Dscan.tag.experiment\", \"-Dscan.tag.${{ inputs.experiment-id }}\"]
          }" > scenario
        else
          echo "assemble {
            title = \"assemble\"
            tasks = [\"${{ inputs.task }}\"]
            cleanup-tasks = [\"clean\"]
            apply-abi-change-to = [${{ inputs.class }}]
            gradle-args = [\"$EXTRA_ARG\", \"-Dscan.tag.${{ inputs.experiment-id }}_${{ inputs.variant-prefix }}${{ inputs.variant }}\", \"-Dscan.tag.experiment\", \"-Dscan.tag.${{ inputs.experiment-id }}\"]
          }" > scenario
        fi 

        # Execute the Gradle Profiler
        gradle-profiler-0.22.0/bin/gradle-profiler --benchmark --scenario-file scenario assemble --warmups ${{ inputs.warmups }} --iterations ${{ inputs.iterations }}

        # Generate table output from benchmark results
        TABLE_OUTPUT="<table><tr><td>Build</td><td>Time</td></tr>"
        while read line; do
          IFS="," read -r -a Array <<< "$line"
          TABLE_OUTPUT="$TABLE_OUTPUT<tr><td>${Array[0]}</td><td>${Array[1]}</td></tr>"
        done < <(tail -n +2 profile-out/benchmark.csv)
        echo "$TABLE_OUTPUT</table>" >> $GITHUB_STEP_SUMMARY
      shell: bash
      env:
        DEVELOCITY_ACCESS_KEY: ${{ inputs.api-key }}
        CI_URL_CACHE_NODE: ${{ inputs.cache-url }}

    - name: Archive Profiler Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: profiler-${{ inputs.variant-prefix }}${{ inputs.variant }}
        path: |
          profile-out/*
